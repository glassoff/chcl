<?php
/*
::::::::::::::::::::::::::::::::::::::::
 Snippet name: Wayfinder
 Short Desc: builds site navigation
 Version: 2.0
 Authors: 
	Kyle Jaebker (muddydogpaws.com)
	Ryan Thrash (vertexworks.com)
 Date: February 27, 2006
::::::::::::::::::::::::::::::::::::::::
*/

class eCList {
	var $params;
	var $config;	
	var $templates;	
	var $lang = array();
	var $phs = array(
		'tvs' => array()
		);
  	
		
	function init() {
		global $modx;
		$this->itemCount = $this->getListItemCount();
		//$this->setTVList();	
		$this->loadConfig();		
	}
	
	function loadConfig() {
		global $modx;
		$sql = "SELECT setting_name, setting_value FROM ".$modx->getFullTableName("ec_settings");
		$rs = mysql_query($sql);
		$number_of_ec_settings = mysql_num_rows($rs);
		while ($row = mysql_fetch_assoc($rs)) {
			$this->config[$row['setting_name']] = $row['setting_value'];
		}			
	}
	
	function buildList($start = 0, $stop = 0) {
		global $modx;		
		$output = '';		
		$rows = '';		
		$cells = '';	
		$messageTpl = $this->getTemplate($this->templates['message1Tpl']);
		$outerTpl = $this->getTemplate($this->templates['outerTpl']);
		$rowTpl = $this->getTemplate($this->templates['rowTpl']);
		$cellTpl = $this->getTemplate($this->templates['cellTpl']);	
		$pagerTpl = $this->getTemplate($this->templates['pagerTpl']);		
		$list_items = $this->getListItems($start, $stop);
				
		if (count($list_items) == 0) {
			$message = str_replace('[+message+]',$this->lang[0], $messageTpl);				
			return $outerTpl.$message;
		}						
		
		if ($this->params['columns'] == 1) {						 	
			foreach($list_items as $item) {	
				$row = $rowTpl;			
				
				if ($item['retail_price'] != 0 && $item['sell'] == 1) 
				$ok_to_sell = 1;
				else 
				$ok_to_sell = 0;				
		
				$row = str_replace('[+ok_to_sell+]', $ok_to_sell, $row);
				
				
				
			    foreach($item as $k => $v) {		
				

					    	
					$row = str_replace('[+'.$k.'+]', $v, $row);	
					

								
				} 
				
				
				
				$row = str_replace('[+itemscreenshotshomeid+]',$this->params['itemscreenshotshomeid'], $row);
				$row = str_replace('[+itemhomeid+]',$this->params['itemhomeid'], $row);
				if (isset($_SESSION['rozn'])&&$_SESSION['rozn']==1) $rozn=1; else $rozn=0;
				$row = str_replace('[+rozn+]', $rozn, $row);	
				
				$rows .= $row;														
			}					 
			$output = str_replace('[+ecl.wrapper+]',$rows, $outerTpl);	
			$output = str_replace('[+itemhomeid+]',$this->params['itemhomeid'], $output);			
		} else {
			$columns = intval($this->params['columns']);
			$size = (count($list_items) > $columns) ? ceil(count($list_items)/$columns) : 1;	
			$l = 0;
			$item_ids = array_keys($list_items);
			for($j=0; $j<$size; $j++) {
				for($i=0; $i<$columns; $i++) {
					$cell = $cellTpl;			
					$cell_item = @$list_items[@$item_ids[$l]];
					$l++;		
					if (is_array($cell_item)) {						
						foreach($cell_item as $k => $v) {						
							$cell = str_replace('[+'.$k.'+]', $v, $cell);
						} 
						$cell = str_replace('[+itemhomeid+]',$this->params['itemhomeid'], $cell);
						$cells .= $cell;
					}
				}				
				$rows .= str_replace('[+ecl.wrapper+]',$cells, $rowTpl);				
				$cells = '';
			}
			//echo $l;	
			$output = str_replace('[+ecl.wrapper+]',$rows, $outerTpl);						
		}		
		if (sizeof($this->pager)>0) {
			foreach($this->pager as $k => $v) {						
				$pagerTpl = str_replace('[+'.$k.'+]', $v, $pagerTpl);
			} 
			$output = str_replace('[+ecl.pager+]',$pagerTpl, $output);
		}		
		
		
		if (isset($_SESSION['rozn'])&&$_SESSION['rozn']==1) $rozn=1; else $rozn=0;
	    $output = str_replace('[+rozn+]', $rozn, $output);	
	    
	    
		return $output;
	}
	
	function buildItemScreenshots($id) {
		global $modx;	
		$messageTpl = $this->getTemplate($this->templates['messageTpl']);
		$itemTpl = $this->getTemplate($this->templates['itemScreenshotsTpl']);		
		$item_ = $this->getItem($id);		
		if ($item_ == false) {		
			$url = $modx->makeUrl($modx->config['site_start']);		
			$modx->sendRedirect($url,0,'REDIRECT_HEADER');			
		}					
		$output = $itemTpl;	
		$item = current($item_);	
		foreach($item as $k => $v) {			 	
			$output = str_replace('[+'.$k.'+]', $v, $output);
			
		}			
		//
		$modx->setPlaceholder('itemtitle',$item['pagetitle']);
        $modx->setPlaceholder('metatags',$metas);
		$output = str_replace('[+itemhomeid+]',$this->params['itemhomeid'], $output);			
		return $output;		
	}
	
	function buildItemMovie($id) {
		global $modx;	
		$messageTpl = $this->getTemplate($this->templates['messageTpl']);
		$itemTpl = $this->getTemplate($this->templates['itemScreenshotsTpl']);		
		$item_ = $this->getItem($id);		
		if ($item_ == false) {		
			$url = $modx->makeUrl($modx->config['site_start']);		
			$modx->sendRedirect($url,0,'REDIRECT_HEADER');			
		}					
		$output = $itemTpl;	
		$item = current($item_);	
		foreach($item as $k => $v) {			 	
			$output = str_replace('[+'.$k.'+]', $v, $output);
		}			
		  $modx->setPlaceholder('itemtitle',$item['pagetitle']);
        $modx->setPlaceholder('metatags',$metas);
		//
		$output = str_replace('[+itemhomeid+]',$this->params['itemhomeid'], $output);			
		return $output;		
	}
	
	function buildItemAccessories($ids) {
		global $modx;		
		$output = '';		
		$rows = '';		
		$cells = '';	
		$messageTpl = $this->getTemplate($this->templates['messageTpl']);
		$outerTpl = $this->getTemplate($this->templates['accOuterTpl']);
		$rowTpl = $this->getTemplate($this->templates['accRowTpl']);
		$cellTpl = $this->getTemplate($this->templates['accCellTpl']);			
		$list_items = $this->getItemAccessories($ids);				
		if (count($list_items) == 0) {
			$message = str_replace('[+message+]',$this->lang[1], $messageTpl);		
			return $message;
		}								
		if ($this->params['columns'] == 1) {			
			foreach($list_items as $item) {	
				$row = $rowTpl;		
					
				if ($item['retail_price'] != 0 && $item['sell'] == 1) 
				$ok_to_sell = 1;
				else 
				$ok_to_sell = 0;				
		
				$row = str_replace('[+ok_to_sell+]', $ok_to_sell, $row);	
					
			    foreach($item as $k => $v) {			    	
					$row = str_replace('[+'.$k.'+]', $v, $row);	
									
				} 
				$rows .= $row;													
			}					 
			$output = str_replace('[+ecl.wrapper+]',$rows, $outerTpl);	
			$output = str_replace('[+itemhomeid+]',$this->params['itemhomeid'], $output);			
		} else {
			$columns = intval($this->params['columns']);
			$size = (count($list_items) > $columns) ? ceil(count($list_items)/$columns) : 1;	
			$a = 0;			
			for($j=0; $j<$size; $j++) {
				for($i=0; $i<$columns; $i++) {
					$cell = '';
					foreach($list_items[$a] as $k => $v) {						
						$cell = str_replace('[+ecl.'.$k.'+]', $v, $cellTpl);
					} 
					$a++;
					$cells .= $cell;
				}				
				$rows .= str_replace('[+ecl.wrapper+]',$cells, $rowTpl);				
				$cells = '';
			}	
			$output = str_replace('[+ecl.wrapper+]',$rows, $outerTpl);	
			$output = str_replace('[+itemhomeid+]',$this->params['itemhomeid'], $output);
			$output = str_replace('[+itemscreenshotshomeid+]',$this->params['itemscreenshotshomeid'], $output);			
								
		}			
		foreach($this->tvList as $tvName) {						
			$output = str_replace("[+$tvName+]", "", $output);
		} 
		return $output;
	}
	
	function buildItem($id) {			
		global $modx;	
		
		$canvote = true;
		$voted = false;
		
		if (isset($_REQUEST['itemvote']) && isset($_REQUEST['itemid'])) {
			$rating = intval($_REQUEST['itemvote']);
			if (isset($_COOKIE['cssStarRating' . $id])) {
				$canvote = false;	
				$dublevoted = true;
			} elseif ($rating > 0) {
				$sql = "UPDATE ".$modx->getFullTableName("site_ec_items")." SET votes = votes+1,rating=rating+$rating WHERE id = $id LIMIT 1";	        				$run = $modx->dbQuery($sql);	
				$ovtime = 60*60*24;		
				setcookie('cssStarRating' . $id, 'novote', time() + $ovtime);
				$canvote = false;
				$voted = true;
			} else {
				$canvote = true;	
				$selectrate = true;
			}
		}	
		
		$messageTpl = $this->getTemplate($this->templates['messageTpl']);
		$itemTpl = $this->getTemplate($this->templates['itemTpl']);	
		$similarItemRowTpl = $this->getTemplate($this->templates['similarItemRowTpl']);	
		$item_ = $this->getItem($id);		
		
		if ($item_ == false) {		
			$url = $modx->makeUrl($modx->config['site_start']);		
			$modx->sendRedirect($url,0,'REDIRECT_HEADER');			
		}					
		
		$output = $itemTpl;		
		$item = current($item_);
		
		$color = $item['color'];
		$size= $item['size'];
		
			$color1 = $item['color'];
		$size1= $item['size'];	

				$color= explode (",", $color);
				$size= explode (",", $size);

                $count_color = count($color);
				$count_size = count($size);
				
$c='<select name="item[color]">'; 
$i=0;
               for ($i=0; $i<$count_color; $i++)
               {$c.='<option value="'.$color[$i].'">'.$color[$i].'</option>'; }

	$c.='</select>';
	
	$s='<select name="item[size]">'; 
               for ($i=0; $i<$count_size; $i++)
               {$s.='<option value="'.$size[$i].'">'.$size[$i].'</option>'; }

	$s.='</select>';
	
		
		$output = str_replace('[+color+]', $c, $output);
		
		$output = str_replace('[+size+]', $s, $output);
		
		$output = str_replace('[+color1+]', $color1, $output);
		
		$output = str_replace('[+size1+]', $size1, $output);
		
		
		if (isset($_SESSION['rozn'])&&$_SESSION['rozn']==1) $rozn=1; else $rozn=0;
	    $output = str_replace('[+rozn+]', $rozn, $output);	
				
		
		foreach($item as $k => $v) {	
		
	 	
			$output = str_replace('[+'.$k.'+]', $v, $output);
			
		
			
		}			
		
			$time_now= time();
				$timestamp=$item['date_issue']-3888000;
				
				if ($item['retail_price'] != 0 && $item['sell'] == 1)
				$ok_to_sell = 1; //в нале
				elseif ($item['sell'] == 0 && ($time_now<$timestamp or $item['date_issue']<1)) 
				$ok_to_sell = 2; //будет не скоро
				elseif ($item['sell'] == 0 && $time_now>=$timestamp && $time_now<=$item['date_issue'])
				$ok_to_sell = 3; //скоро в продаже
				
				else 
				$ok_to_sell = 0;			
		
		$output = str_replace('[+ok_to_sell+]', $ok_to_sell, $output);			
		$rows = '';		
		
		$similaritems = $this->getSimilarItemsList($item['similaritems']);	        
		
		foreach($similaritems as $similaritem) {	
			$output1 = $similarItemRowTpl;
			foreach($similaritem as $k => $v) {			 	
				$output1 = str_replace('[+'.$k.'+]', $v, $output1);
			}		 	
			$rows .= $output1;
		}	
		
		$output = str_replace('[+similaritemsrows+]', $rows, $output);		
		
		$tags = $this->getMETATags($id);			
		$metas = '';
		
        foreach ($tags as $n => $col) {
        	$tag= strtolower($col['tag']);
            $tagvalue= $col['tagvalue'];
            $tagstyle= $col['http_equiv'] ? 'http-equiv' : 'name';
            $metas .= "<meta $tagstyle=\"$tag\" content=\"$tagvalue\" />\n";
        }			
        
        $modx->setPlaceholder('itemtitle',$item['pagetitle']);
        $modx->setPlaceholder('metatags',$metas);		
		
        if ($canvote) $output = str_replace('[+canvote+]',1, $output);
        if ($voted) $output = str_replace('[+voted+]',1, $output);     
        if ($selectrate) $output = str_replace('[+selectrate+]',1, $output); 
        if ($dublevoted) $output = str_replace('[+dublevoted+]',1, $output);        
        
        $output = str_replace('[+itemscreenshotshomeid+]',$this->params['itemscreenshotshomeid'], $output);
		$output = str_replace('[+itemhomeid+]',$this->params['itemhomeid'], $output);			
		return $output;		
	}
	
	function getMETATags($id= 0) {     
		global $modx;
        $sql = "SELECT * FROM " . $modx->getFullTableName("site_ec_item_metatags") ." WHERE item_id = '$id'";        
        $ds = $modx->db->query($sql);         
        $limit= $modx->db->getRecordCount($ds);
        $metatags= array ();
        if ($limit > 0) {
            for ($i= 0; $i < $limit; $i++) {
                $row= $modx->db->getRow($ds);
                $metatags[$row['name']]= array (
                    "tag" => $row['tag'],
                    "tagvalue" => $row['tagvalue'],
                    "http_equiv" => $row['http_equiv']
                );
            }
        }
        return $metatags;
    }
	
	function getListItemCount() {
		global $modx;
		$resourceArray = array();$tempResults =  array();		
		$fields = "count(id) as cnt";
	    $filter_sql =str_replace(':','=',$this->params['filter']);
		//Get the table names
	    $tblsc = $modx->getFullTableName("site_ec_items");	         
		// build query
	    $sql = "SELECT {$fields} FROM {$tblsc} si WHERE published=1 AND deleted=0 ";
	    $sql.= !empty($this->params['parents']) ? " AND parent IN (".$this->params['parents'].")" : ""; 	
	    $sql.= !empty($filter_sql) ? " AND {$filter_sql} " : " ";    
	   
		$result = $modx->dbQuery($sql);	        
		$numResults = @$modx->recordCount($result);
		if ($numResults == 1) {
			$row = $modx->fetchRow($result);			
			return $row['cnt'];
		} else return 0;
	}
	// search	
	function getSearchResultsCount($search) {
		global $modx;
		$resourceArray = array();$tempResults =  array();		
		//Get the table names
	    $tblsc = $modx->getFullTableName("site_ec_items");	         
		$tblsc1 = $modx->getFullTableName("site_tmplvar_ec_itemvalues");  

			
		$search_mode = '';
		$search_mode = 'WITH QUERY EXPANSION';
		$search_mode = 'IN BOOLEAN MODE';
		
		$search_arr  = str_word_count($search, 1);
		$search_words_count = count($search_arr);
		
		if (strlen($search) == 3 || $search_words_count = 1) {
			$sql = "SELECT id ";
	        $sql.= "FROM $tblsc WHERE pagetitle LIKE '%$search%' AND published=1 AND deleted=0 ";
	        
	        $result1 = $modx->dbQuery($sql);	        
			$numResults1 = @$modx->recordCount($result1);		
			
	        $sql = "SELECT itemid ";
	        $sql.= "FROM $tblsc1 tv INNER JOIN $tblsc si ON tv.itemid = si.id WHERE si.published=1 AND si.deleted=0 AND tv.value LIKE '%$search%'";        
	        
	        $result2 = $modx->dbQuery($sql);	        
			$numResults2 = @$modx->recordCount($result2);
		} else {
		    $sql = "SELECT id, MATCH (pagetitle) AGAINST ('$search' $search_mode) AS score ";
	        $sql.= "FROM $tblsc WHERE MATCH (pagetitle) AGAINST ('$search' $search_mode) AND published=1 AND deleted=0 ";
	        
	        $result1 = $modx->dbQuery($sql);	        
			$numResults1 = @$modx->recordCount($result1);		
			
	        $sql = "SELECT itemid, MATCH (tv.value) AGAINST ('$search' $search_mode) AS score ";
	        $sql.= "FROM $tblsc1 tv INNER JOIN $tblsc si ON tv.itemid = si.id WHERE si.published=1 AND si.deleted=0 AND MATCH (tv.value) AGAINST ('$search' $search_mode)";        
	        
	        $result2 = $modx->dbQuery($sql);	        
			$numResults2 = @$modx->recordCount($result2);
		}
		$result_ids = array();
		
		for($i=0;$i<$numResults1;$i++)  {
			$temp = $modx->fetchRow($result1);
			$result_ids[] = $temp['id'];  	
		}
		
		for($i=0;$i<$numResults2;$i++)  {
			$temp = $modx->fetchRow($result2);
			if (!in_array($temp['itemid'],$result_ids)) $result_ids[] = $temp['itemid'];  	
		}
		
		$numResults = count($result_ids); 
		$this->searchResultIDs = implode(',',$result_ids);
		$this->searchResultsCount = count($result_ids);
		return $numResults;		
	}
		
	function buildSearch($search,$start = 0, $stop = 0) {
		global $modx;		
		$output = '';		
		$rows = '';		
		$cells = '';	
		$messageTpl = $this->getTemplate($this->templates['messageTpl']);
		$outerTpl = $this->getTemplate($this->templates['searchOuterTpl']);
		$rowTpl = $this->getTemplate($this->templates['searchRowTpl']);
		$pagerTpl = $this->getTemplate($this->templates['pagerTpl']);
		
		
		$searchtxt = htmlspecialchars(stripslashes(@$_SESSION['searchtxt']));
		
		
		if (isset($_SESSION['search']['sort'])) $search_sort = $_SESSION['search']['sort']; else $search_sort = 'si.retail_price';	
		$outerTpl = str_replace('[+search.sort+]',$search_sort, $outerTpl);			
		
		if (strlen($search) < 3) {
			$message = str_replace('[+search_text+]', $searchtxt, $this->lang['min_word']);	
			$message = str_replace('[+message+]',$message, $messageTpl); 		
			$output = str_replace('[+search.message+]',$message, $outerTpl);
			$output = str_replace('[+search.text+]', $searchtxt, $output);		
			return $output;
		}	
		
		if (!empty($search)) $list_items = $this->getSearchResults($search,$start, $stop);
		
		if (empty($search)) {
			return $outerTpl;
		}		
		
		
		
		if (count($list_items) == 0) {
			$message = str_replace('[+search_text+]', $searchtxt, $this->lang['no_entries']);			
			$output = str_replace('[+search.message+]',$message, $outerTpl);
			$output = str_replace('[+search.text+]', $searchtxt, $output);		
			return $output;
		}					

		foreach($list_items as $item) {	
			$row = $rowTpl;			
		    foreach($item as $k => $v) {			    	
				$row = str_replace('[+'.$k.'+]', $v, $row);			
			} 
			$row = str_replace('[+itemhomeid+]',$this->params['itemhomeid'], $row);
			$rows .= $row;													
		}					 
		
		$output = str_replace('[+ecl.wrapper+]',$rows, $outerTpl);	
		$output = str_replace('[+itemscreenshotshomeid+]',$this->params['itemscreenshotshomeid'], $output);
		$output = str_replace('[+itemhomeid+]',$this->params['itemhomeid'], $output);			
		$output = str_replace('[+search.text+]',$searchtxt, $output);		
		$search_message = str_replace('[+found+]',$this->searchResultsCount,$this->lang['found_entries']);
		
		foreach($this->pager as $k => $v) {						
			$pagerTpl = str_replace('[+'.$k.'+]', $v, $pagerTpl);
		} 
		
		$output = str_replace('[+ecl.pager+]',$pagerTpl, $output);
		$output = str_replace('[+search.message+]',$search_message, $output);		
		if (sizeof($this->pager)>0) {
			foreach($this->pager as $k => $v) {						
				$pagerTpl = str_replace('[+'.$k.'+]', $v, $pagerTpl);
			} 
			$output = str_replace('[+ecl.pager+]',$pagerTpl, $output);
		}			
		return $output;
	}
	
	function processSearchText() {
		global $modx;
		$search = '';
		
		if (isset($_REQUEST['searchtxt']) && !empty($_REQUEST['searchtxt'])) {
			$_SESSION['searchtxt'] = $_REQUEST['searchtxt'];
		}
		
		if (isset($_REQUEST['searchsort']) && !empty($_REQUEST['searchsort'])) {
			$_SESSION['search']['sort'] = $_REQUEST['searchsort'];	
					
		} else {
			$_SESSION['search']['sort'] = 'score';	
		}	
		
		if (isset($_SESSION['searchtxt'])) {
			$search = $_SESSION['searchtxt'];
		}	
		
		return $search;
	}
	
	function getSearchResults($search,$start = 0,$stop = 0) {		
		global $modx;
		$resourceArray = array();$tempResults =  array();		
		$fields = "si.*,sc.pagetitle as parenttitle, sb.name as brand_name,sp.name as pack_name";
		//Get the table names

			
	    if (strtolower($this->params['sort']) == 'random') {
			$sort = 'rand()';
			$dir = '';
		} else {
			// modify field names to use  table reference
			$sort = $this->params['sort'];
			$dir = $this->params['dir'];
		}

		switch (@$_SESSION['search']['sort']) {
			
			case 'score': {
				$search_sort = '';
			};break;
			
			case 'si.retail_price': {
				$search_sort = 'si.retail_price,';
			};break;
			
			case '': {
				$search_sort = 'si.rating DESC,';
			};break;
			
			default: {
				$search_sort = '';
			}; break;
			
		}
		

		// build query
	    $search_txt = $modx->db->escape($search);	    
		if (!($start >= 0 && $stop >= 0)) return array();
	    $sql = "SELECT $fields FROM ".$modx->getFullTableName("site_ec_items")." si LEFT JOIN ";
	    $sql.= $modx->getFullTableName("site_content")." sc  ON si.parent = sc.id LEFT JOIN ";
	    $sql.= $modx->getFullTableName("site_ec_brands")." sb ON si.brand_id = sb.id  LEFT JOIN ";
	    $sql.= $modx->getFullTableName("site_ec_packs")." sp ON si.pack_id = sp.id ";
	    $sql.= "WHERE si.id IN ($this->searchResultIDs) ";	    
        $sql.= "ORDER BY $search_sort $sort $dir ";
		$sql.= ($start == 0 && $stop == 0) ? " " : " LIMIT $start, $stop;";		
		
		if (!empty($this->searchResultIDs)) {
			$result = $modx->dbQuery($sql);		      
			$numResults = @$modx->recordCount($result);
		} else {
			$numResults = 0;
		}
		
		$resultIds = array();		
		//loop through the results
		for($i=0;$i<$numResults;$i++)  {
			$_item = array();
			$tempDocInfo = $modx->fetchRow($result);
			
			$tempDocInfo['fretail_price'] = money1($tempDocInfo['retail_price']); 
			
			if ($this->config['is_mdealer_price_active'] == '0') $tempDocInfo['fmdealer_price'] = '0.00';
			else $tempDocInfo['fmdealer_price'] = money1($tempDocInfo['mdealer_price']);
			
			if ($this->config['is_dealer_price_active'] == '0') $tempDocInfo['fdealer_price'] = '0.00';
			else $tempDocInfo['fdealer_price'] = money1($tempDocInfo['dealer_price']);
			
			$tempDocInfo['fsku'] = quantity($tempDocInfo['sku']);
			$resultIds[] = $tempDocInfo['id'];				
			$tempResults[$tempDocInfo['id']] = $tempDocInfo;						
	    }
	    unset($result);
		//Process the tvs
		$resourceArray = $this->appendTVs($tempResults,$resultIds);
		//var_dump($resourceArray);
        return $resourceArray;
	}	
	
	// end search
	
	function getItem($id) {		
		global $modx;
		$resourceArray = array();
		$tempResults =  array();		
		$fields = "*";		
	    //Get the table names
	    $tblsc = $modx->getFullTableName("site_ec_items");					       
	    // build query
	    $sql = "SELECT si.*,sc.pagetitle as parenttitle, sb.name as brand_name,sp.name as pack_name FROM "; 
	    $sql.= $modx->getFullTableName("site_ec_items")." si LEFT JOIN ";
	    $sql.= $modx->getFullTableName("site_content")." sc  ON si.parent = sc.id LEFT JOIN ";
	    $sql.= $modx->getFullTableName("site_ec_brands")." sb ON si.brand_id = sb.id  LEFT JOIN ";
	    $sql.= $modx->getFullTableName("site_ec_packs")." sp ON si.pack_id = sp.id ";
	    $sql.= "WHERE si.published=1 AND si.deleted=0 AND si.id={$id} LIMIT 1";	      
		//echo $sql;
		
		$result = $modx->dbQuery($sql);				
		$numResults = @$modx->recordCount($result);
		if ($numResults != 1) return  false;
		$resultIds = array();		
		//loop through the results
		$tempDocInfo = $modx->fetchRow($result);
		
		$tempDocInfo['fretail_price'] = money1($tempDocInfo['retail_price']); 
		if ($this->config['is_mdealer_price_active'] == '0') $tempDocInfo['fmdealer_price'] = '0.00';
		else $tempDocInfo['fmdealer_price'] = money1($tempDocInfo['mdealer_price']);
		
		if ($this->config['is_dealer_price_active'] == '0') $tempDocInfo['fdealer_price'] = '0.00';
		else $tempDocInfo['fdealer_price'] = money1($tempDocInfo['dealer_price']);
		
		$tempDocInfo['fsku'] = quantity($tempDocInfo['sku']);
		$resultIds[] = $tempDocInfo['id'];				
		$tempResults[$tempDocInfo['id']] = $tempDocInfo;	    
		
		$resourceArray = $this->appendTVs($tempResults,$resultIds);
		//$resourceArray = $resourceArray[$tempDocInfo['id']];		
        return $resourceArray;
	}
	// ---------------------------------------------------
	// Function: appendTV taken from Ditto (thanks Mark)
	// Apeend a TV to the documents array
	// ---------------------------------------------------	
	//Get all of the documents from the database
	function getSimilarItemsList($ids) {		
		global $modx;
		if (empty($ids)) return array();
		$resourceArray = array();$tempResults =  array();		
		$fields = "*";
	    $sql = "SELECT si.*,sc.pagetitle as parenttitle FROM "; 
	    $sql.= $modx->getFullTableName("site_ec_items")." si LEFT JOIN ";
	    $sql.= $modx->getFullTableName("site_content")." sc  ON si.parent = sc.id ";
	    $sql.= "WHERE si.id IN ($ids) AND si.published=1 AND si.deleted=0 ";
	    $sql.= " GROUP BY si.id ORDER BY si.pagetitle ";
		$result = $modx->dbQuery($sql);		      
		$numResults = @$modx->recordCount($result);		
		if (!$numResults > 0) return $resourceArray;		
		$resultIds = array();		
		//loop through the results
		for($i=0;$i<$numResults;$i++)  {
			$tempDocInfo = $modx->fetchRow($result);							
			$tempResults[$tempDocInfo['id']] = $tempDocInfo;						
	    }
	    $resourceArray = $tempResults;
	    unset($result);		
		return $resourceArray;
	}	
	
	function getListItems($start = 0,$stop = 0) {		
		global $modx;
		$resourceArray = array();$tempResults =  array();		
		$fields = "*";
		
	    //Get the table names
	    if (strtolower($this->params['sort']) == 'random') {
			$sort = 'rand()';
			$dir = '';
		} else {
			// modify field names to use  table reference
			$sort = $this->params['sort'];
			$dir = $this->params['dir'];
		}				       
	    // build query
		if (!($start >= 0 && $stop >= 0)) return array();
	    $filter_sql =str_replace(':','=',$this->params['filter']);	   
	    $sql = "SELECT si.*,sc.pagetitle as parenttitle, sb.name as brand_name,si.rating/si.votes as rate FROM "; 
	    //$sql = "SELECT si.*,sc.pagetitle as parenttitle, sb.name as brand_name,sp.name as pack_name FROM "; 
	    $sql.= $modx->getFullTableName("site_ec_items")." si LEFT JOIN ";
	    $sql.= $modx->getFullTableName("site_content")." sc  ON si.parent = sc.id LEFT JOIN ";
	    $sql.= $modx->getFullTableName("site_ec_brands")." sb ON si.brand_id = sb.id ";
	    //$sql.= $modx->getFullTableName("site_ec_packs")." sp ON si.pack_id = sp.id ";
	    $sql.= "WHERE ".(!empty($this->params['parents']) ? " si.parent IN (".$this->params['parents'].") AND " : ""); 
	    $sql.= " si.published=1 AND si.deleted=0";
	    $sql.= !empty($filter_sql) ? " AND {$filter_sql} " : " ";
	    $sql.= " ORDER BY {$sort} {$dir} ";
		$sql.= ($start == 0 && $stop == 0) ? " " : " LIMIT {$start}, {$stop};";
		$result = $modx->dbQuery($sql);		      
		$numResults = @$modx->recordCount($result);
		$resultIds = array();		
		
		//$sql_brandes = "SELECT id,name FROM ".$modx->getFullTableName("site_ec_brands");
		
		//loop through the results
		for($i=0;$i<$numResults;$i++)  {
			$_item = array();
			$tempDocInfo = $modx->fetchRow($result);
			$tempDocInfo['fretail_price'] = money1($tempDocInfo['retail_price']);
						
			if ($this->config['is_mdealer_price_active'] == '0') $tempDocInfo['fmdealer_price'] = '0.00';
			else $tempDocInfo['fmdealer_price'] = money1($tempDocInfo['mdealer_price']);
			
			if ($this->config['is_dealer_price_active'] == '0') $tempDocInfo['fdealer_price'] = '0.00';
			else $tempDocInfo['fdealer_price'] = money1($tempDocInfo['dealer_price']);				
			
			$tempDocInfo['fsku'] = quantity($tempDocInfo['sku']);
			$resultIds[] = $tempDocInfo['id'];				
			$tempResults[$tempDocInfo['id']] = $tempDocInfo;						
	    }
	    unset($result);	    
		//Process the tvs		
		$resourceArray = $this->appendTVs($tempResults,$resultIds);
		unset($tempResults);
		//echo '<pre>';
		//var_dump($resourceArray);
  		//echo '</pre>';		
		//exit;
  		//var_dump($resourceArray);
        return $resourceArray;
	}	
	
	function getItemAccessories($ids) {		
		global $modx;
		$resourceArray = array();$tempResults =  array();		
		$fields = "*";
		
	    //Get the table names
	    $tblsc = $modx->getFullTableName("site_ec_items");	       
		if (strtolower($this->params['sort']) == 'random') {
			$sort = 'rand()';
			$dir = '';
		} else {
			// modify field names to use  table reference
			$sort = $this->params['sort'];
			$dir = $this->params['dir'];
		}				       
	    // build query
	    $sql = "SELECT {$fields} FROM {$tblsc} WHERE published=1 AND deleted=0 ";
	    $sql.= " AND id IN (".$ids.")"; 
	    $sql.= " ORDER BY {$this->params['accsort']} {$this->params['accdir']}";
		//echo  $sql;
		//echo $sql;
		$result = $modx->dbQuery($sql);		      
		$numResults = @$modx->recordCount($result);
		$resultIds = array();		
		//loop through the results
		for($i=0;$i<$numResults;$i++)  {
			$_item = array();
			$tempDocInfo = $modx->fetchRow($result);
			$tempDocInfo['fretail_price'] = money1($tempDocInfo['retail_price']); 
			$tempDocInfo['fdealer_price'] = money1($tempDocInfo['dealer_price']);
			$tempDocInfo['fsku'] = quantity($tempDocInfo['sku']);
			$resultIds[] = $tempDocInfo['id'];				
			$tempResults[] = $tempDocInfo;						
	    }
	    unset($result);
		if (!empty($this->tvList) && !empty($resultIds)) {
			$tvValues = array();
			//loop through all tvs and get their values for each document
			
			foreach ($this->tvList as $tvName) {				
				$tvValues = array_merge_recursive($this->appendTV($tvName,$resultIds),$tvValues);				
			}
		    //loop through the document array and add the tvar values to each document		
			foreach ($tempResults as $tempDocInfo) {
				if (array_key_exists("#{$tempDocInfo['id']}",$tvValues)) {
					foreach ($tvValues["#{$tempDocInfo['id']}"] as $tvName => $tvValue) {							
						$tempDocInfo[$tvName] = $tvValue;
					}
				}
				$resourceArray[] = $tempDocInfo;
				unset($resultIds);
				unset($tempResults);
			}
		} else {				
			$resourceArray = $tempResults;
		}	
		//var_dump($resourceArray);
        return $resourceArray;
	}	
		
	function appendTVs($tempResults,$docIDs){
		global $modx;		
		if (implode($docIDs,",") == '') return $tempResults;
		$baspath= $modx->config["base_path"] . "manager/includes";
	    include_once $baspath . "/tmplvars.format.inc.php";
	    include_once $baspath . "/tmplvars.commands.inc.php";
		$tb1 = $modx->getFullTableName("site_tmplvar_ec_itemvalues");		
		$tb2 = $modx->getFullTableName("site_tmplvars");		
		$query = "SELECT stv.name,stc.tmplvarid,stc.itemid,stv.type,stv.display,stv.display_params,stc.value";
		$query .= " FROM ".$tb1." stc LEFT JOIN ".$tb2." stv ON stv.id=stc.tmplvarid  ";
		$query .= " WHERE stc.itemid IN (".implode($docIDs,",").")";
		$rs = $modx->db->query($query);
		$tot = $modx->db->getRecordCount($rs);		
		$tvlist = $this->getTVList();		
		foreach ($tvlist as $tv) {
			foreach ($tempResults as $id => $item) {
				$tempResults[$id][$tv] = '';
			}
		}		
		$resourceArray = $tempResults;
		for($i=0;$i<$tot;$i++)  {			
			$row = @$modx->fetchRow($rs);
			if (!empty($row['value']))
			$resourceArray[$row['itemid']][$row['name']] = getTVDisplayFormat($row['name'], $row['value'], $row['display'], $row['display_params'], $row['type'],$row['itemid']);   
			else 
			$resourceArray[$row['itemid']][$row['name']] = getTVDisplayFormat($row['name'], $row['default_text'], $row['display'], $row['display_params'], $row['type'],$row['itemid']);	
			$tv_names[$row['itemid']][] = $row['name'];				
		}		
		return $resourceArray;
	}	
	// ---------------------------------------------------
	// Get a list of all available TVs
	// ---------------------------------------------------		
	//debugging to check for valid chunks
    function getTemplate($v) {
        global $modx;		
		$template = $this->fetch($v);
        return $template; 				
    }
	//if (!empty($nonZCartFields)) {
	//	$nonZCartFields = array_unique($nonZCartFields);
	function setTVList() {
		$allTvars = array();
		$allTvars = $this->getTVList();
		foreach ($allTvars as $field) {
			$this->placeHolders['tvs'][] = "[+{$field}+]";
			$this->tvList[] = $field;
		}		
    }
	// ---------------------------------------------------
	// Function: getTVList
	// Get a list of all available TVs
	// ---------------------------------------------------
	function getTVList() {
		global $modx;
		$table = $modx->getFullTableName("site_tmplvars");
		$tvs = $modx->db->select("name", $table);
		// TODO: make it so that it only pulls those that apply to the current template
		$dbfields = array();
		while ($dbfield = $modx->db->getRow($tvs))
			$dbfields[] = $dbfield['name'];
		return $dbfields;
	}
	
	function fetch($tpl){
		// based on version by Doze at http://modxcms.com/forums/index.php/topic,5344.msg41096.html#msg41096
		global $modx;
		$template = "";
		if ($modx->getChunk($tpl) != "") {
			$template = $modx->getChunk($tpl);
		} else if(substr($tpl, 0, 6) == "@FILE:") {
			$template = $this->get_file_contents(substr($tpl, 6));
		} else if(substr($tpl, 0, 6) == "@CODE:") {
			$template = substr($tpl, 6);
		} else {
			$template = FALSE;
		}
		return $template;
	}

	function get_file_contents($filename) {
		// Function written at http://www.nutt.net/2006/07/08/file_get_contents-function-for-php-4/#more-210
		// Returns the contents of file name passed
		if (!function_exists('file_get_contents')) {
			$fhandle = fopen($filename, "r");
			$fcontents = fread($fhandle, filesize($filename));
			fclose($fhandle);
		} else	{
			$fcontents = file_get_contents($filename);
		}
		return $fcontents;
	}
	
	function findTemplateVars($tpl) {
		preg_match_all('~\[\+(.*?)\+\]~', $tpl, $matches);
		$cnt = count($matches[1]);
				
		$tvnames = array ();
		for ($i = 0; $i < $cnt; $i++) {
			if (strpos($matches[1][$i], "zc.") === FALSE) {
				$tvnames[] =  $matches[1][$i];
			}
		}

		if (count($tvnames) >= 1) {
			return array_unique($tvnames);
		} else {
			return false;
		}
	}
	
	function buildURL($args,$id=false,$dittoIdentifier=false) {
		global $modx, $dittoID;
			$dittoID = ($dittoIdentifier !== false) ? $dittoIdentifier : $dittoID;
			$query = array();
			foreach ($_GET as $param=>$value) {
				if ($param != 'id' && $param != 'q') {
					$query[htmlspecialchars($param, ENT_QUOTES)] = htmlspecialchars($value, ENT_QUOTES);					
				}
			}
			if (!is_array($args)) {
				$args = explode("&",$args);
				foreach ($args as $arg) {
					$arg = explode("=",$arg);
					$query[$dittoID.$arg[0]] = urlencode(trim($arg[1]));
				}
			} else {
				foreach ($args as $name=>$value) {
					$query[$dittoID.$name] = urlencode(trim($value));
				}
			}
			$queryString = "";
			foreach ($query as $param=>$value) {
				$queryString .= '&'.$param.'='.(is_array($value) ? implode(",",$value) : $value);
			}
			$cID = ($id !== false) ? $id : $modx->documentObject['id'];
			$url = $modx->makeURL(trim($cID), '', $queryString);
			return str_replace("&","&amp;",$url);
	}
	
	function relToAbs($text, $base) {
		return preg_replace('#(href|src)="([^:"]*)(?:")#','$1="'.$base.'$2"',$text);
	}
	
	function paginate($start, $stop, $total, $pagerlinkcount, $summarize, $paginateAlwaysShowLinks, $tplPaginateNext, $tplPaginatePrevious,$paginateSplitterCharacter) {
		global $modx;
		if ($stop == 0 || $total == 0 || $summarize==0) {
			return false;
		}
		
		$next = $start + $summarize;
		$nextlink = "<a href='".$this->buildURL("start=$next")."'>" . $tplPaginateNext . "</a>";
		$previous = $start - $summarize;
		$previouslink = "<a href='".$this->buildURL("start=$previous")."'>" . $tplPaginatePrevious . "</a>";
		$limten = $summarize + $start;
		if ($paginateAlwaysShowLinks == 1) {
			$previousplaceholder = "<span class='ditto_off'>" . $tplPaginatePrevious . "</span>";
			$nextplaceholder = "<span class='ditto_off'>" . $tplPaginateNext . "</span>";
		} else {
			$previousplaceholder = "";
			$nextplaceholder = "";
		}
		$split = "";
		if ($previous > -1 && $next < $total)
			$split = $paginateSplitterCharacter;
		if ($previous > -1)
			$previousplaceholder = $previouslink;
		if ($next < $total)
			$nextplaceholder = $nextlink;
		if ($start < $total)
			$stop = $limten;
		if ($limten > $total) {
			$limiter = $total;
		} else {
			$limiter = $limten;
		}
				
		$totalpages = ceil($total / $summarize);
		
		if ($pagerlinkcount >= $totalpages) {
			for ($x = 0; $x <= $totalpages -1; $x++) {
				$inc = $x * $summarize;
				$display = $x +1;
				if ($inc != $start) {
					$pages .= "<a class=\"ditto_page\" href='".$this->buildURL("start=$inc")."'>$display</a>";
				} else {
					$modx->setPlaceholder($dittoID."currentPage", $display);
					$pages .= "<span class=\"ditto_currentpage\">$display</span>";
				}
			}
		} else {
			
			$side = ($pagerlinkcount-1)/2;
			$curpage = ceil($start / $summarize)+1;	 
			
			
					
			if (($curpage + $side) <= $totalpages && ($curpage - $side) >= 1) {
				$from = $curpage-$side-1;
				$till = $curpage+$side-1;
			} elseif (($curpage + $side) > $totalpages) {
				$from = $curpage-$side-(($curpage + $side)-($totalpages - 1));
				$till = $totalpages - 1;
			} else {
				$from = 0;
				$till = $pagerlinkcount-1;
			}
			
			for ($x = $from; $x <= $till; $x++) {
				$inc = $x * $summarize;
				$display = $x +1;
				if ($inc != $start) {
					$pages .= "<a class=\"ditto_page\" href='".$this->buildURL("start=$inc")."'>$display</a>";
				} else {
					$modx->setPlaceholder($dittoID."currentPage", $display);
					$pages .= "<span class=\"ditto_currentpage\">$display</span>";
				}
			}			
		}	
		
		$pager["next"] = $nextplaceholder;
		$pager["previous"] = $previousplaceholder;
		$pager["splitter"] = $split;
		$pager["start"] = $start + 1;
		$pager["urlStart"] = $start;
		$pager["stop"] = $limiter;
		$pager["total"] = $total;
		$pager["pages"] = $pages;
		$pager["perPage"] = $summarize;
		$pager["totalPages"] = $totalpages;
		$this->pager = $pager;
	}
	
	}

?>